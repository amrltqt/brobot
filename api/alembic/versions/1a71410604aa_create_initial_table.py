"""create initial table

Revision ID: 1a71410604aa
Revises:
Create Date: 2025-04-27 10:58:21.067763

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "1a71410604aa"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "scenario",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("slug", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("slug"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "scenario_chapter",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("scenario_id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("content", sa.String(), nullable=False),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.Column("meta", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["scenario_id"],
            ["scenario.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "training_session",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("scenario_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["scenario_id"],
            ["scenario.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "scenario_id", name="unique_user_scenario"),
    )
    op.create_table(
        "session_message",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("session_id", sa.Integer(), nullable=False),
        sa.Column("role", sa.String(length=50), nullable=False),
        sa.Column("content", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["session_id"],
            ["training_session.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "chapter_completion",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("session_id", sa.Integer(), nullable=False),
        sa.Column("chapter_id", sa.Integer(), nullable=False),
        sa.Column("message_id", sa.Integer(), nullable=False),
        sa.Column("completed_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["chapter_id"],
            ["scenario_chapter.id"],
        ),
        sa.ForeignKeyConstraint(
            ["message_id"],
            ["session_message.id"],
        ),
        sa.ForeignKeyConstraint(
            ["session_id"],
            ["training_session.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_chapter_completion_chapter_id"),
        "chapter_completion",
        ["chapter_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_chapter_completion_session_id"),
        "chapter_completion",
        ["session_id"],
        unique=False,
    )
    # ### end Alembic commands ###

    # Create initial user admin
    op.execute(
        sa.text(
            """
            INSERT INTO "user" (email, name, created_at)
            VALUES ('admin@example.com', 'Admin User', NOW())
            """
        )
    )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_chapter_completion_session_id"), table_name="chapter_completion"
    )
    op.drop_index(
        op.f("ix_chapter_completion_chapter_id"), table_name="chapter_completion"
    )
    op.drop_table("chapter_completion")
    op.drop_table("session_message")
    op.drop_table("training_session")
    op.drop_table("scenario_chapter")
    op.drop_table("user")
    op.drop_table("scenario")
    # ### end Alembic commands ###
